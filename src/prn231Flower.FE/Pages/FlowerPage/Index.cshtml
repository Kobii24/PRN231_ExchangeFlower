@page
@using System.IdentityModel.Tokens.Jwt
@model prn231Flower.FE.Pages.FlowerPage.IndexModel

@{
    ViewData["Title"] = "Index";
}

@{
    var token = HttpContext.Session.GetString("JWTToken");
    string userRole = string.Empty;

    if (!string.IsNullOrEmpty(token))
    {
        var tokenHandler = new JwtSecurityTokenHandler();
        var jwtToken = tokenHandler.ReadToken(token) as JwtSecurityToken;
        if (jwtToken != null)
        {
            var roleClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "role");
            if (roleClaim != null)
            {
                userRole = roleClaim.Value;
            }
        }
    }
}

<h1>Flower List</h1>

@if(userRole.Equals("1") || userRole.Equals("3"))
{
    <p>
        <a asp-page="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].ImgUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flowers[0].User)
            </th>
            <th></th>
        </tr>
    </thead>
<tbody>
        @foreach (var item in Model.Flowers)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                <td>@Html.DisplayFor(modelItem => item.ImgUrl)</td>
                <td>@Html.DisplayFor(modelItem => item.User.Email)</td>
                <td>
                    @if (userRole.Equals("1") || userRole.Equals("3"))
                    {
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
                        <span> | </span>
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                        <span> | </span>
                    }
                    <a asp-page="/CheckoutPage/Index" asp-route-id="@item.Id">Buy now</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @if (Model.PageNumber == 1) {
        <text>disabled</text>
}">
            <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.PageNumber - 1)">Previous</a>
        </li>

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-page="./Index" asp-route-pageNumber="@i">@i</a>
            </li>
        }

        <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.PageNumber + 1)">Next</a>

    </ul>
</nav>